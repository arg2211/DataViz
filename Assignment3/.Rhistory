ylab="Inequality Due to Lack of Motivation"))
abline(lm(yhat ~ bdiscr, data = r2), lwd = 2, col = "seagreen3")
with(r2, plot(age.sq, jitter(bmotiv), col = "turquoise3", cex = 0.75,
xlab="Age Squared",
ylab="Inequality Due to Lack of Motivation"))
abline(lm(yhat ~ age.sq, data = r2), lwd = 2, col = "seagreen3")
with(r2, plot(jitter(age.sq), jitter(bmotiv), col = "turquoise3", cex = 0.75,
xlab="Age Squared",
ylab="Inequality Due to Lack of Motivation"))
abline(lm(yhat ~ age.sq, data = r2), lwd = 2, col = "seagreen3")
regLine(lm4, lwd=2, lty=1)
with(r2, plot(jitter(realinc), jitter(bmotiv), col = "redorange", cex = 0.75,
xlab="Income",
ylab="Inequality Due to Lack of Motivation"))
with(r2, plot(jitter(realinc), jitter(bmotiv), col = "orangered", cex = 0.75,
xlab="Income",
ylab="Inequality Due to Lack of Motivation"))
abline(lm(yhat ~ realinc, data = r2), lwd = 2, col = "seagreen3")
with(r2, plot(jitter(polviews), jitter(bmotiv), col = "black", cex = 0.75,
xlab="Political Views",
ylab="Inequality Due to Lack of Motivation"))
abline(lm(yhat ~ polviews, data = r2), lwd = 2, col = "seagreen3")
truehist(r2$resids, col = "gold", yaxt = "n", cex.axis = 0.8, xlab = "Residuals")
curve(dnorm(x, mean = mean(r2$resids), sd = sd(r2$resids)),
lwd = 4, col = "orangered", add=T)
range(r2$yhat)
library(lmtest)
bptest(lm4)
logit1 = glm(bmotiv ~ bdiscr + age + age.sq + educ + realinc + acqmyrac +
relevel(race.fact, ref=1) + polviews, r2, family=binomial)
summary(logit1)
stargazer(lm4, logit1, title="Regression Results", align=TRUE,
dep.var.labels=c("Ineq Due to Lack of Motivation"),
covariate.labels=c("Ineq Due to Discrimination", "Age", "Age Squared",
"Education", "Income", "Race of Acquaintances",
"Race - Black", "Race - Other", "Political Views"),
no.space=TRUE, column.labels=c("Multiple Reg", "Logit"),
dep.var.caption="", model.numbers=FALSE, type = "text", omit = "Constant")
library(stargazer)
stargazer(lm4, logit1, title="Regression Results", align=TRUE,
dep.var.labels=c("Ineq Due to Lack of Motivation"),
covariate.labels=c("Ineq Due to Discrimination", "Age", "Age Squared",
"Education", "Income", "Race of Acquaintances",
"Race - Black", "Race - Other", "Political Views"),
no.space=TRUE, column.labels=c("Multiple Reg", "Logit"),
dep.var.caption="", model.numbers=FALSE, type = "text", omit = "Constant")
exp(coef(logit1))
summary(r2$age)
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,1), age = c(46,46), polviews = c(4,4), educ = c(12,16),
race.fact = c(1,1)))
summary(r2$age.sq)
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,1), age = c(46,46), age.sq(2116,2116), polviews = c(4,4),
educ = c(12,16), race.fact = c(1,1)))
r2$age.sq = r2$age^2
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,1), age = c(46,46), age.sq(2116,2116), polviews = c(4,4),
educ = c(12,16), race.fact = c(1,1)))
r2 <- d[, c("age", "educ", "realinc", "racdif1", "racdif4", "acqmyrac", "race", "polviews")]
r2 <- na.omit(r2)
options(scipen=999)
r2$age.sq = r2$age^2
r2$bdiscr = ifelse(r2$racdif1==1, 1, 0) ## differences btwn blacks and whites due to discrimination, 1 = yes, 0 = no ##
r2$bmotiv = ifelse(r2$racdif4==1, 1, 0) ## difference btwn blacks and whites bc blacks not motivated, 1 = yes, 0 = no ##
r2$race.l[r2$race==1] <- "White"
r2$race.l[r2$race==2] <- "Black"
r2$race.l[r2$race==3] <- "Other"
r2$race.fact <- factor(r2$race, levels = c(1,2,3), labels = c("White", "Black", "Other"))
r2$yhat <- lm4$fitted # or equivalently sub$yhat <- predict(lpm.romance)
r2$resids <- lm4$residuals
truehist(r2$resids, col = "gold", yaxt = "n", cex.axis = 0.8, xlab = "Residuals")
curve(dnorm(x, mean = mean(r2$resids), sd = sd(r2$resids)),
lwd = 4, col = "orangered", add=T)
range(r2$yhat)
logit1 = glm(bmotiv ~ bdiscr + age + age.sq + educ + realinc + acqmyrac +
relevel(race.fact, ref=1) + polviews, r2, family=binomial)
summary(logit1)
exp(coef(logit1))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,1), age = c(46,46), polviews = c(4,4), educ = c(12,16),
race.fact = c(1,1)))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,0), age = c(46,46), polviews = c(4,4), educ = c(16,16),
race.fact = c(1,2)))
exists(age.sq)
exists(r2$age.sq)
exists(age.sq)
exists(realinc)
exists(age)
summary(r2$realinc)
summary(r2$acqmyrac)
summary(r2$polviews)
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,1), age = c(46,46), age.sq = c(2116, 2116), polviews = c(4,4),
educ = c(12,16), realinc = c(25000,25000) , acqmyrac = c(2,2),
race.fact = c(1,1), polviews = (4,4)))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0, 1), age = c(46, 46), age.sq = c(2116, 2116), polviews = c(4, 4),
educ = c(12, 16), realinc = c(25000, 25000), acqmyrac = c(2, 2),
race.fact = c(1, 1), polviews = (4, 4)))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0, 1), age = c(46, 46), age.sq = c(2116, 2116), polviews = c(4, 4),
educ = c(12, 16), realinc = c(25000, 25000), acqmyrac = c(2, 2),
race.fact = c(1, 1), polviews = (4, 4))))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0, 1), age = c(46, 46), age.sq = c(2116, 2116), polviews = c(4, 4),
educ = c(12, 16), realinc = c(25000, 25000), acqmyrac = c(2, 2),
race.fact = c(1, 1), polviews = (4, 4))))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0, 1), age = c(46, 46), age.sq = c(2116, 2116),
educ = c(12, 16), realinc = c(25000, 25000), acqmyrac = c(2, 2),
race.fact = c(1, 1), polviews = c(4, 4))))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0, 1), age = c(46, 46), age.sq = c(2116, 2116),
educ = c(12, 16), realinc = c(25000, 25000), acqmyrac = c(2, 2),
race.fact = c(1, 1), polviews = c(4, 4)))
class(race.fact)
class(r2$race.fact)
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,0), age = c(46,46), age.sq = c(2116, 2116),
educ = c(16,16), realinc = c(25000,25000), acqmyrac = c(2,2),
race.fact = c(1,2), polviews = (4, 4)))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,0), age = c(46,46), age.sq = c(2116, 2116),
educ = c(16,16), realinc = c(25000,25000), acqmyrac = c(2,2),
race.fact = c(1,2), polviews = c(4, 4)))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(1,1), age = c(46,46), age.sq = c(2116, 2116),
educ = c(16,16), realinc = c(25000,25000), acqmyrac = c(2,2),
race.fact = c(2,2), polviews = c(4, 4)))
logit1 = glm(bmotiv ~ bdiscr + age + age.sq + educ + realinc + acqmyrac +
relevel(race.fact, ref=1) + polviews, r2, family=binomial)
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0, 1), age = c(46, 46), age.sq = c(2116, 2116),
educ = c(12, 16), realinc = c(25000, 25000), acqmyrac = c(2, 2),
race.fact = c(1, 1), polviews = c(4, 4)))
library(stargazer)
stargazer(lm4, logit1, title="Regression Results", align=TRUE,
dep.var.labels=c("Ineq Due to Lack of Motivation"),
covariate.labels=c("Ineq Due to Discrimination", "Age", "Age Squared",
"Education", "Income", "Race of Acquaintances",
"Race - Black", "Race - Other", "Political Views"),
no.space=TRUE, column.labels=c("Multiple Reg", "Logit"),
dep.var.caption="", model.numbers=FALSE, type = "text", omit = "Constant")
lm5 = lm(bmotiv ~ bdiscr + age + age.sq + educ + realinc + acqmyrac + polviews, r2)
summary(lm5)
r2$yhat <- lm5$fitted # or equivalently sub$yhat <- predict(lpm.romance)
r2$resids <- lm5$residuals
truehist(r2$resids, col = "gold", yaxt = "n", cex.axis = 0.8, xlab = "Residuals")
curve(dnorm(x, mean = mean(r2$resids), sd = sd(r2$resids)),
lwd = 4, col = "orangered", add=T)
logit2 = glm(bmotiv ~ bdiscr + age + age.sq + educ + realinc + acqmyrac + polviews, r2, family=binomial)
summary(logit2)
predict(logit2, type = "response", newdata = data.frame(bdiscr = c(0, 1), age = c(46, 46), age.sq = c(2116, 2116),
educ = c(12, 16), realinc = c(25000, 25000), acqmyrac = c(2, 2),
polviews = c(4, 4)))
predict(logit2, type = "response", newdata = data.frame(bdiscr = c(0,0), age = c(46,46), age.sq = c(2116, 2116),
educ = c(16,16), realinc = c(25000,25000), acqmyrac = c(2,2),
polviews = c(4, 4)))
predict(logit2, type = "response", newdata = data.frame(bdiscr = c(1,1), age = c(46,46), age.sq = c(2116, 2116),
educ = c(16,16), realinc = c(25000,25000), acqmyrac = c(2,2),
polviews = c(4, 4)))
pred.dat <- with(r2, expand.grid(
bdiscr = sort(unique(bdiscr)),
age = mean(age),
age.sq = mean(age.sq),
educ = mean(educ),
realinc = mean(realinc),
acqmyrac = sort(unique(acqmyrac)),
polviews = mean(polviews)))
predProb(logit2, predData = pred.dat, ci = F)
pred.dat <- with(r2, expand.grid(
bdiscr = sort(unique(bdiscr)),
age = mean(age),
age.sq = mean(age.sq),
educ = mean(educ),
realinc = mean(realinc),
acqmyrac = sort(unique(acqmyrac)),
polviews = sort(unique(polviews)))
pred.dat <- with(r2, expand.grid(
bdiscr = sort(unique(bdiscr)),
age = mean(age),
age.sq = mean(age.sq),
educ = mean(educ),
realinc = mean(realinc),
acqmyrac = sort(unique(acqmyrac)),
polviews = sort(unique(polviews))))
pred.dat <- with(r2, expand.grid(
bdiscr = sort(unique(bdiscr)),
age = mean(age),
age.sq = mean(age.sq),
educ = mean(educ),
realinc = mean(realinc),
acqmyrac = sort(unique(acqmyrac)),
polviews = sort(unique(polviews))))
predProb(logit2, predData = pred.dat, ci = F)
library(visreg)
plot(logit2)
library(visreg)
visreg(logit2, xvar="bdiscr", by="bmotiv", overlay=T, partial=F, legend=F,
xlab="Ineq. Due to Discrimination", ylab="Ineq. Due to Lack of Motivation",
scale="response", line = list(col = c("cyan3", "purple3", "red", "blue", "gray55")))
visreg(logit2, xvar="bdiscr", by="bmotiv", overlay=T, partial=F, legend=F,
xlab="Ineq. Due to Discrimination", ylab="Ineq. Due to Lack of Motivation",
scale="response", type = "conditional",
line = list(col = c("cyan3", "purple3", "red", "blue", "gray55")))
visreg(logit2, xvar="bdiscr", by="bmotiv", overlay=T, partial=F, legend=F,
xlab="Ineq. Due to Discrimination", ylab="Ineq. Due to Lack of Motivation",
scale="response", type = "conditional", alpha = .90,
line = list(col = c("cyan3", "purple3", "red", "blue", "gray55")))
visreg(logit2, xvar="bdiscr", by="bmotiv", overlay=T, partial=F, legend=F,
xlab="Ineq. Due to Discrimination", ylab="Ineq. Due to Lack of Motivation",
scale="response", type = "conditional", alpha = .90,
line = list(col = c("cyan3", "purple3")))
visreg(logit2, xvar="bdiscr", by="bmotiv", overlay=T, partial=F, legend=F,
xlab="Ineq. Due to Discrimination", ylab="Ineq. Due to Lack of Motivation",
scale="response", type = "conditional", alpha = .90,
line = list(col = c("cyan3", "purple3", "gray55")))
legend("bottomleft", lwd = 2, c("1", "2", "3", "4", "5"), col = c("cyan3", "purple3", "red", "blue", "gray55"), cex = 0.8)
library(plm)
library(QMSS)
d=read.csv(file.choose()) ## choose "panel-for-R.csv" and more information on variables are here: http://sda.berkeley.edu/sdaweb/analysis/?dataset=gss06panelw3 ##
vars <- c("idnum","panelwave","affrmact","race", "intrace1")
pd.sub <- d[, vars]
pd.sub$black = ifelse(pd.sub$race==2, 1, 0)
pd.sub$intblack = ifelse(pd.sub$intrace1==2, 1, 0)
pd.sub$r.affact = 5-pd.sub$affrmact
pd.sub$year= ifelse(pd.sub$panelwave==3, 1, 0)
lm1 <- lm(r.affact ~ black + intblack + as.factor(panelwave),  data = pd.sub)
summary(lm1)
clusterSE(fit = lm1, cluster.var = "idnum", data=pd.sub)
plm1 <- plm(r.affact ~ black + intblack + year,  index = c("idnum", "panelwave"),  model = "fd", data = pd.sub)
summary(plm1)
clusterSE(fit = plm1, cluster.var = "idnum", data=pd.sub)
pd.sub$fourvsall= ifelse(pd.sub$r.affact==4, 1, 0)
pd.sub$fourthreevsall= ifelse(pd.sub$r.affact>=3, 1, 0)
pd.sub$fourthreetwovsone= ifelse(pd.sub$r.affact>=2, 1, 0)
plm2 <- plm(fourvsall ~ black + intblack + year,  index = c("idnum", "panelwave"),  model = "fd", data = pd.sub)
plm3 <- plm(fourthreevsall ~ black + intblack + year,  index = c("idnum", "panelwave"),  model = "fd", data = pd.sub)
plm4 <- plm(fourthreetwovsone ~ black + intblack + year,  index = c("idnum", "panelwave"),  model = "fd", data = pd.sub)
summary(plm4)
library(stargazer)
stargazer(plm1, plm2, plm3, plm4, type = "text")
pd.sub$d.intblack = firstD(intblack, idnum, pd.sub )
table(pd.sub$d.intblack)
pd.sub$bw=ifelse(pd.sub$d.intblack==-1,1,0)
pd.sub$wb=ifelse(pd.sub$d.intblack==1,1,0)
pd.sub$d.r.affact=firstD(r.affact, idnum, pd.sub )
summary(lm(intblack ~ black, pd.sub))
pd.sub$d.black = firstD(black, idnum, pd.sub )
table(pd.sub$d.black)
summary(lm(d.r.affact ~ bw, pd.sub, subset=black==0))
vars2 = c("colsci", "colscinm", "advfront", "scibnfts", "natsci", "educ", "relig", "fund", "idnum", "panelwave", "id", "year")
v = pan[,vars2]
table(v$panelwave, v$advfront)
prop.table(table(v$panelwave, v$advfront))
table(v$panelwave, v$natsci)
prop.table(table(v$panelwave, v$natsci))
library(plyr)
library(devtools)
library(QMSS)
v$scinec = 5-v$advfront
lm2 <- lm(natsci ~ scinec + as.factor(panelwave), v)
summary(lm2)
sci.pool2 <- plm(natsci ~ scinec + as.factor(panelwave), index = c("idnum", "panelwave"), model = "pooling", data = v)
summary(sci.pool2)
clusterSE(fit = lm2, cluster.var = "idnum", data = v)
pan=read.csv(file.choose()) ## choose panel-for-R.csv
vars2 = c("colsci", "colscinm", "advfront", "scibnfts", "natsci", "educ", "relig", "fund", "idnum", "panelwave", "id", "year")
v = pan[,vars2]
table(v$panelwave, v$advfront)
prop.table(table(v$panelwave, v$advfront))
library(plyr)
library(devtools)
library(QMSS)
v$scinec = 5-v$advfront
lm2 <- lm(natsci ~ scinec + as.factor(panelwave), v)
summary(lm2)
clusterSE(fit = lm2, cluster.var = "idnum", data = v)
v <- ddply(v, "idnum", mutate, d.scinec = firstD(scinec), d.natsci = firstD(natsci))
table(v$d.scinec)
prop.table(table(v$d.scinec))
table(v$d.natsci)
prop.table(table(v$d.natsci))
plm2 <- plm(natsci ~ scinec + as.factor(panelwave), index = c("idnum", "panelwave"), model = "fd", data = v)
summary(plm2)
clusterSE(fit = plm2, cluster.var = "idnum", data=v)
v$bsci = 4-v$scibnfts
v <- ddply(v, "idnum", mutate, d.bsci = firstD(bsci))
table(v$d.bsci)
prop.table(table(v$d.bsci))
plm3 <- plm(natsci ~ scinec + as.factor(panelwave) + as.factor(bsci), index = c("idnum", "panelwave"), model = "fd", data = v)
summary(plm3)
library(stargazer)
stargazer(lm2, plm2, plm3, title="Regression Results", align=TRUE, dep.var.labels=c("Federal Spending on Scientific Research"), covariate.labels=c("Pro Sci","2008","2010","Ben=Harm","Ben>Harm"), no.space=TRUE, column.labels=c("OLS", "First Diff A", "First Diff B"), dep.var.caption="", model.numbers=FALSE, type = "text", omit = "Constant")
install.packages("streamR")
library(streamR)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "gYIxV6TdEf9glxYWlGSGdBAiF"
consumerSecret <- "QIRynpLw0P6elikgsRyQeM7SzencY0Q1oGDwfb4zvzWpGBUe1K"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey, consumerSecret = consumerSecret,
requestURL = requestURL, accessURL = accessURL, authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
library(RCurl)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "gYIxV6TdEf9glxYWlGSGdBAiF"
consumerSecret <- "QIRynpLw0P6elikgsRyQeM7SzencY0Q1oGDwfb4zvzWpGBUe1K"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey, consumerSecret = consumerSecret,
requestURL = requestURL, accessURL = accessURL, authURL = authURL)
load("my_oauth")
library(ROAuth)
install.packages("ROAuth")
library(ROAuth)
library(RCurl)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "gYIxV6TdEf9glxYWlGSGdBAiF"
consumerSecret <- "QIRynpLw0P6elikgsRyQeM7SzencY0Q1oGDwfb4zvzWpGBUe1K"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey, consumerSecret = consumerSecret,
requestURL = requestURL, accessURL = accessURL, authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
save(my_oauth, file = "my_oauth.Rdata")
load("my_oauth.Rdata")
library(streamR)
filterStream("tweets.json", track = c("women", "men", timeout = 10, oauth = my_oauth))
filterStream("tweets.json", track = c("women", "men"), timeout = 10, oauth = my_oauth)
tweets.df <- parseTweets("tweets.json", simplify = TRUE)
c( length(grep("women", tweets.df$text, ignore.case = TRUE)),
length(grep("men", tweets.df$text, ignore.case = TRUE)) )
View(tweets.df)
table(tweets.df)
View(tweets.df)
list(tweets.df)
filterStream("tweetsUS.json", locations = c(-125, 25, -66, 50), timeout = 10,
oauth = my_oauth)
tweets.df <- parseTweets("tweetsUS.json", verbose = FALSE)
library(ggplot2)
library(grid)
map.data <- map_data("state")
install.packages("maps")
library(maps)
map.data <- map_data("state")
points <- data.frame(x = as.numeric(tweets.df$lon), y = as.numeric(tweets.df$lat))
points <- points[points$y > 25, ]
ggplot(map.data) + geom_map(aes(map_id = region), map = map.data, fill = "white",
color = "grey20", size = 0.25) + expand_limits(x = map.data$long, y = map.data$lat) +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(),
axis.title = element_blank(), panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(), plot.background = element_blank(),
plot.margin = unit(0 * c(-1.5, -1.5, -1.5, -1.5), "lines")) + geom_point(data = points,
aes(x = x, y = y), size = 1, alpha = 1/5, color = "darkblue")
table(gss$race)
prop.table(table(gss$race))
find.package("devtools")
library(devtools)
find_rtools()
find.package("KernSmooth")
library(KernSmooth)
setwd("~/GitHub/NYTtextanalysis/data/random2015dates")
options(stringsAsFactors = FALSE)
library(tm)
setwd("~/GitHub/DataViz/Assignment3")
library(streamR)
primariestweets <- read.csv("./primaries-data/primariestweets.csv", header = TRUE)
primariestweets$text <- sapply(primariestweets$text, function(row) iconv(row, "latin1", "ASCII", sub = ""))
hc <- subset(primariestweets, subset = grepl("hillary|clinton|hillaryclinton", text, ignore.case=TRUE))
tc <- subset(primariestweets, subset = grepl("ted|cruz|tedcruz", text, ignore.case=TRUE))
mr <- subset(primariestweets, subset = grepl("marco|rubio|marcorubio", text, ignore.case=TRUE))
bs <- subset(primariestweets, subset = grepl("bernie|sanders|berniesanders", text, ignore.case=TRUE))
dt <- subset(primariestweets, subset = grepl("donald|trump|donaldtrump|drumpf|donalddrumpf", text, ignore.case=TRUE))
library(sp)
library(maps)
library(rgdal)
library(rgeos)
library(GISTools)
library(maptools)
geo.hc <- cbind(hc$lon, hc$lat)
geo.hc2 <- na.omit(geo.hc)  # get rid of all NAs
sp.hc <- SpatialPoints(geo.hc2)  # need to make matrix into spatialpoints (sp package)
geo.tc <- cbind(tc$lon, tc$lat)
geo.tc2 <- na.omit(geo.tc)  # get rid of all NAs
sp.tc <- SpatialPoints(geo.tc2)  # need to make matrix into spatialpoints (sp package)
geo.mr <- cbind(mr$lon, mr$lat)
geo.mr2 <- na.omit(geo.mr)  # get rid of all NAs
sp.mr <- SpatialPoints(geo.mr2)  # need to make matrix into spatialpoints (sp package)
geo.bs <- cbind(bs$lon, bs$lat)
geo.bs2 <- na.omit(geo.bs)  # get rid of all NAs
sp.bs <- SpatialPoints(geo.bs2)  # need to make matrix into spatialpoints (sp package)
geo.dt <- cbind(dt$lon, dt$lat)
geo.dt2 <- na.omit(geo.dt)  # get rid of all NAs
sp.dt <- SpatialPoints(geo.dt2)  # need to make matrix into spatialpoints (sp package)
library(ggplot2) # need for map_data function
all_states <- map_data("state")
worldmap <- map_data("world")
library(rgeos)
library(GISTools)
require(maps)
usa <- map("state", fill = TRUE)  # produces map of US by state
worldmap <- map("world", fill = TRUE) #produces map of world
require(sp)
require(maptools)
IDs <- sapply(strsplit(usa$names, ":"), function(x) x[1])
usa <- map2SpatialPolygons(usa, IDs=IDs, proj4string=CRS("+proj=longlat +datum=WGS84"))
worldIDs <- sapply(strsplit(worldmap$names, ":"), function(x) x[1])
worldmap <- map2SpatialPolygons(worldmap, IDs=worldIDs, proj4string=CRS("+proj=longlat +datum=WGS84"))
sum(poly.counts(sp.hc, usa)) # = 173
sum(poly.counts(sp.tc, usa)) # = 119
sum(poly.counts(sp.mr, usa)) # = 59
sum(poly.counts(sp.bs, usa)) # = 203
sum(poly.counts(sp.dt, usa)) # = 221
sum(poly.counts(sp.hc, worldmap)) # = 190
sum(poly.counts(sp.tc, worldmap)) # = 131
sum(poly.counts(sp.mr, worldmap)) # = 65
sum(poly.counts(sp.bs, worldmap)) # = 225
sum(poly.counts(sp.dt, worldmap)) # = 248
usa$statecountHC <- poly.counts(sp.hc, usa)
usa$statecountTC <- poly.counts(sp.tc, usa)
usa$statecountMR <- poly.counts(sp.mr, usa)
usa$statecountBS <- poly.counts(sp.bs, usa)
usa$statecountDT <- poly.counts(sp.dt, usa)
worldmap$countrycountHC <- poly.counts(sp.hc, worldmap)
worldmap$countrycountTC <- poly.counts(sp.tc, worldmap)
worldmap$countrycountMR <- poly.counts(sp.mr, worldmap)
worldmap$countrycountBS <- poly.counts(sp.bs, worldmap)
worldmap$countrycountDT <- poly.counts(sp.dt, worldmap)
usa$statepropHC <- poly.counts(sp.hc, usa)/sum(poly.counts(sp.hc, usa))*100
usa$statepropTC <- poly.counts(sp.tc, usa)/sum(poly.counts(sp.tc, usa))*100
usa$statepropMR <- poly.counts(sp.mr, usa)/sum(poly.counts(sp.mr, usa))*100
usa$statepropBS <- poly.counts(sp.bs, usa)/sum(poly.counts(sp.bs, usa))*100
usa$statepropDT <- poly.counts(sp.dt, usa)/sum(poly.counts(sp.dt, usa))*100
library(tmap)
library(RColorBrewer)
geo.all <- cbind(primariestweets$lon, primariestweets$lat)
geo.all2 <- na.omit(geo.all)  # get rid of all NAs
sp.all <- SpatialPoints(geo.all2)  # need to make matrix into spatialpoints (sp package)
plot(sp.all)  # plot spatial points that we created from long & lat
class(sp.all)  # check that the value is sp
poly.counts(sp.all, usa)
poly.counts(sp.all, worldmap)
sum(poly.counts(sp.all, usa))
sum(poly.counts(sp.all, worldmap))
usa$statecountALL <- poly.counts(sp.all, usa)
worldmap$countrycountALL <- poly.counts(sp.all, worldmap)
usa$statepropALL <- poly.counts(sp.all, usa)/sum(poly.counts(sp.all, usa))*100
prop.table(worldmap$countrycountALL)
worldmap$countrycountALL
View(primariestweets)
898/1693821
geop.hc <- cbind(hc$place_lon, hc$place_lat)
geop.hc2 <- na.omit(geop.hc)  # get rid of all NAs
spp.hc <- SpatialPoints(geop.hc2)  # need to make matrix into spatialpoints (sp package)
geop.tc <- cbind(tc$place_lon, tc$place_lat)
geop.tc2 <- na.omit(geop.tc)  # get rid of all NAs
spp.tc <- SpatialPoints(geop.tc2)  # need to make matrix into spatialpoints (sp package)
geop.mr <- cbind(mr$place_lon, mr$place_lat)
geop.mr2 <- na.omit(geop.mr)  # get rid of all NAs
spp.mr <- SpatialPoints(geop.mr2)  # need to make matrix into spatialpoints (sp package)
geop.bs <- cbind(bs$place_lon, bs$place_lat)
geop.bs2 <- na.omit(geop.bs)  # get rid of all NAs
spp.bs <- SpatialPoints(geop.bs2)  # need to make matrix into spatialpoints (sp package)
geop.dt <- cbind(dt$place_lon, dt$place_lat)
geop.dt2 <- na.omit(geop.dt)  # get rid of all NAs
spp.dt <- SpatialPoints(geop.dt2)  # need to make matrix into spatialpoints (sp package)
geop.all <- cbind(primariestweets$place_lon, primariestweets$place_lat)
geop.all2 <- na.omit(geop.all)  # get rid of all NAs
spp.all <- SpatialPoints(geop.all2)  # need to make matrix into spatialpoints (sp package)
poly.counts(spp.all, usa)
sum(poly.counts(spp.all, usa)) # = 10906
sum(poly.counts(spp.all, worldmap)) # =
prop.table(poly.counts(spp.all, worldmap))
usa$pstatecountDT <- poly.counts(spp.all, usa)
usa$pstatecountDT <- poly.counts(spp.dt, usa)
usa$pstatecountALL <- poly.counts(spp.all, usa)
worldmap$pcountrycountALL <- poly.counts(spp.all, worldmap)
usa$pstatepropALL <- poly.counts(spp.all, usa)/sum(poly.counts(spp.all, usa))*100
qtm(usa, "pstatecountALL")
prop.table(worldmap$countrycountALL)
prop.table(worldmap$pcountrycountALL)
qtm(worldmap, "pcountrycountALL")
27516/30519
30519/1693821
worldmap$countrycountHC
colSums(worldmap$countrycountHC != 0)
colSums(worldmap != 0)
library(plyr)
nonzero <- function(x) sum(x != 0)
numcolwise(nonzero)(worldmap)
worldmap.df <- data.frame(worldmap)
numcolwise(nonzero)(worldmap)
numcolwise(nonzero)(worldmap.df)
usa$pstatecountHC <- poly.counts(spp.hc, usa)
usa$pstatecountTC <- poly.counts(spp.tc, usa)
usa$pstatecountMR <- poly.counts(spp.mr, usa)
usa$pstatecountBS <- poly.counts(spp.bs, usa)
usa$pstatecountDT <- poly.counts(spp.dt, usa)
usa$pstatecountALL <- poly.counts(spp.all, usa)
worldmap$pcountrycountHC <- poly.counts(spp.hc, worldmap)
worldmap$pcountrycountTC <- poly.counts(spp.tc, worldmap)
worldmap$pcountrycountMR <- poly.counts(spp.mr, worldmap)
worldmap$pcountrycountBS <- poly.counts(spp.bs, worldmap)
worldmap$pcountrycountDT <- poly.counts(spp.dt, worldmap)
worldmap$pcountrycountALL <- poly.counts(spp.all, worldmap)
usa$pstatepropHC <- poly.counts(spp.hc, usa)/sum(poly.counts(spp.hc, usa))*100
usa$pstatepropTC <- poly.counts(spp.tc, usa)/sum(poly.counts(spp.tc, usa))*100
usa$pstatepropMR <- poly.counts(spp.mr, usa)/sum(poly.counts(spp.mr, usa))*100
usa$pstatepropBS <- poly.counts(spp.bs, usa)/sum(poly.counts(spp.bs, usa))*100
usa$pstatepropDT <- poly.counts(spp.dt, usa)/sum(poly.counts(spp.dt, usa))*100
usa$pstatepropALL <- poly.counts(spp.all, usa)/sum(poly.counts(spp.all, usa))*100
worldmap.df <- data.frame(worldmap)
numcolwise(nonzero)(worldmap.df)
staticmapusaHC <- qtm(usa, fill = "statepropHC", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Hillary", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 2, 4, 8, 10, 20), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "PuBuGn"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapusaHC
save_tmap(staticmapusaHC, filename="./jpeg-maps/staticmap.usa.HC.jpg")
