fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 4, 100, 200), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(4, "OrRd"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = 0)
staticmapworldTC <- qtm(worldmap, fill = "countrycountTC", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Ted's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 2, 3, 5, 100, 110), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(6, "RdPu"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = 0)
staticmapworldTC
staticmapworldHC <- qtm(worldmap, fill = "countrycountHC", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Hillary's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 5, 80, 200), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(4, "PuBuGn"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = 0)
staticmapworldHC
staticmapworldTC <- qtm(worldmap, fill = "countrycountTC", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Ted's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 2, 3, 5, 100, 110), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(6, "Greens"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = 0)
staticmapworldMR <- qtm(worldmap, fill = "countrycountMR", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Marco's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 4, 100, 200), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(4, "Oranges"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = 0)
staticmapworldBS <- qtm(worldmap, fill = "countrycountBS", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Bernie's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 2, 5, 10, 200), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Blues"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = 0)
staticmapworldDT <- qtm(worldmap, fill = "countrycountDT", # use worldmap that we created and fill with DT's tweet counts by country
fill.title = "Trump's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 3, 10, 100, 205), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Purples"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = 0)
save_tmap(staticmapworldHC, filename="./jpeg-maps/staticmap.world.HC.jpg")
staticmapworldDT <- qtm(worldmap, fill = "countrycountDT", # use worldmap that we created and fill with DT's tweet counts by country
fill.title = "Trump's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 3, 10, 100, 205), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Purples"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapworldBS <- qtm(worldmap, fill = "countrycountBS", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Bernie's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 2, 5, 10, 200), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Blues"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapworldMR <- qtm(worldmap, fill = "countrycountMR", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Marco's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 4, 100, 200), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(4, "Oranges"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapworldTC <- qtm(worldmap, fill = "countrycountTC", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Ted's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 2, 3, 5, 100, 110), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(6, "Greens"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapworldHC <- qtm(worldmap, fill = "countrycountHC", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Hillary's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 5, 80, 200), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(4, "PuBuGn"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
save_tmap(staticmapworldHC, filename="./jpeg-maps/staticmap.world.HC.jpg")
save_tmap(staticmapworldTC, filename="./jpeg-maps/staticmap.world.TC.jpg")
save_tmap(staticmapworldMR, filename="./jpeg-maps/staticmap.world.MR.jpg")
save_tmap(staticmapworldBS, filename="./jpeg-maps/staticmap.world.BS.jpg")
save_tmap(staticmapworldDT, filename="./jpeg-maps/staticmap.world.DT.jpg")
usa$statepropHC
staticmapusaHC <- qtm(usa, fill = "statepropHC", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Hillary's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 2, 4, 10, 20), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "PuBuGn"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapusaHC
staticmapusaHC <- qtm(usa, fill = "statepropHC", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Total Tweets about Hillary", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 2, 4, 10, 20), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "PuBuGn"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapusaHC
staticmapusaHC <- qtm(usa, fill = "statepropHC", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Hillary", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 2, 4, 10, 20), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "PuBuGn"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapusaHC
usa$statepropTC
summary(usa$statepropTC)
staticmapusaTC <- qtm(usa, fill = "statepropTC", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Hillary", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 2, 4, 6, 8, 10), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(6, "PuBuGn"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapusaTC
staticmapusaTC <- qtm(usa, fill = "statepropTC", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Hillary", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 2, 4, 6, 8, 10), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "PuBuGn"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapusaTC
staticmapusaTC <- qtm(usa, fill = "statepropTC", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Ted", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 2, 4, 6, 8, 10), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "PuBuGn"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapusaTC <- qtm(usa, fill = "statepropTC", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Ted", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 2, 4, 6, 8, 10), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Greens"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapusaTC
summary(usa$statepropMR)
usa$statepropMR
staticmapusaMR <- qtm(usa, fill = "statepropMR", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Marco", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 4, 8, 12, 16), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Oranges"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapusaMR
staticmapusaMR <- qtm(usa, fill = "statepropMR", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Marco", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 2, 4, 8, 12, 16), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Oranges"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapusaMR
summary(usa$statepropBS)
usa$statepropBS
staticmapusaBS <- qtm(usa, fill = "statepropBS", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Bernie", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 2, 4, 6, 8, 10, 14), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(6, "Blues"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapusaBS
staticmapusaBS <- qtm(usa, fill = "statepropBS", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Bernie", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 2, 4, 8, 10, 14), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Blues"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapusaBS
usa$statepropDT
summary(use$statepropDT)
summary(usa$statepropDT)
staticmapusaDT <- qtm(usa, fill = "statepropDT", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Donald", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 2, 4, 6, 10, 15), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Purples"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapusaDT
save_tmap(staticmapusaDT, filename="./jpeg-maps/staticmap.usa.DT.jpg")
save_tmap(staticmapusaBS, filename="./jpeg-maps/staticmap.usa.BS.jpg")
save_tmap(staticmapusaMR, filename="./jpeg-maps/staticmap.usa.MR.jpg")
save_tmap(staticmapusaTC, filename="./jpeg-maps/staticmap.usa.TC.jpg")
save_tmap(staticmapusaHC, filename="./jpeg-maps/staticmap.usa.HC.jpg")
sum(poly.counts(sp.hc, usa)) # = 173
sum(poly.counts(sp.tc, usa)) # = 119
sum(poly.counts(sp.hc, worldmap)) # = 190
sum(poly.counts(sp.tc, worldmap)) # = 131
geop.hc <- cbind(hc$place_lon, hc$place_lat)
geop.hc2 <- na.omit(geop.hc)  # get rid of all NAs
spp.hc <- SpatialPoints(geop.hc2)  # need to make matrix into spatialpoints (sp package)
plot(spp.hc)  # plot spatial points that we created from long & lat
class(spp.hc)  # check that the value is sp
geop.tc <- cbind(tc$place_lon, tc$place_lat)
geop.tc2 <- na.omit(geop.tc)  # get rid of all NAs
spp.tc <- SpatialPoints(geop.tc2)  # need to make matrix into spatialpoints (sp package)
plot(spp.tc)  # plot spatial points that we created from long & lat
plot(spp.tc)  # plot spatial points that we created from long & lat
geop.mr <- cbind(mr$place_lon, mr$place_lat)
geop.mr2 <- na.omit(geop.mr)  # get rid of all NAs
spp.mr <- SpatialPoints(geop.mr2)  # need to make matrix into spatialpoints (sp package)
plot(spp.mr)  # plot spatial points that we created from long & lat
class(spp.mr)  # check that the value is sp
geop.bs <- cbind(bs$place_lon, bs$place_lat)
geop.bs2 <- na.omit(geop.bs)  # get rid of all NAs
spp.bs <- SpatialPoints(geop.bs2)  # need to make matrix into spatialpoints (sp package)
plot(spp.bs)  # plot spatial points that we created from long & lat
geop.dt <- cbind(dt$place_lon, dt$place_lat)
geop.dt2 <- na.omit(geop.dt)  # get rid of all NAs
spp.dt <- SpatialPoints(geop.dt2)  # need to make matrix into spatialpoints (sp package)
plot(spp.dt)  # plot spatial points that we created from long & lat
library(ggplot2) # need for map_data function
sum(poly.counts(spp.hc, usa)) # =
sum(poly.counts(spp.tc, usa)) # =
sum(poly.counts(spp.mr, usa)) # =
sum(poly.counts(spp.bs, usa)) # =
sum(poly.counts(spp.dt, usa)) # =
sum(poly.counts(spp.hc, worldmap)) # =
sum(poly.counts(spp.tc, worldmap)) # =
sum(poly.counts(spp.mr, worldmap)) # =
sum(poly.counts(spp.bs, worldmap)) # =
sum(poly.counts(spp.dt, worldmap)) # =
usa$pstatecountHC <- poly.counts(spp.hc, usa)
usa$pstatecountTC <- poly.counts(spp.tc, usa)
usa$pstatecountMR <- poly.counts(spp.mr, usa)
usa$pstatecountBS <- poly.counts(spp.bs, usa)
usa$pstatecountDT <- poly.counts(spp.dt, usa)
worldmap$pcountrycountHC <- poly.counts(spp.hc, worldmap)
worldmap$pcountrycountTC <- poly.counts(spp.tc, worldmap)
worldmap$pcountrycountMR <- poly.counts(spp.mr, worldmap)
worldmap$pcountrycountBS <- poly.counts(spp.bs, worldmap)
worldmap$pcountrycountDT <- poly.counts(spp.dt, worldmap)
worldmap$pcountrycountHC # look at country counts
usa$pstatepropHC <- poly.counts(spp.hc, usa)/sum(poly.counts(spp.hc, usa))*100
usa$pstatepropTC <- poly.counts(spp.tc, usa)/sum(poly.counts(spp.tc, usa))*100
usa$pstatepropMR <- poly.counts(spp.mr, usa)/sum(poly.counts(spp.mr, usa))*100
usa$pstatepropBS <- poly.counts(spp.bs, usa)/sum(poly.counts(spp.bs, usa))*100
usa$pstatepropDT <- poly.counts(spp.dt, usa)/sum(poly.counts(spp.dt, usa))*100
library(tmap)
library(RColorBrewer)
qtm(usa, "pstatecountHC")
library(tm)
worldmap$pcountrycountHC
pstaticmapworldHC <- qtm(worldmap, fill = "pcountrycountHC", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Hillary's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
#fill.style = "fixed", # allows us to customize legend breaks
#fill.breaks = c(0, 1, 5, 80, 200), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(4, "PuBuGn"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
staticmapworldHC
summary(worldmap$pcountrycountHC)
pstaticmapworldHC <- qtm(worldmap, fill = "pcountrycountHC", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Hillary's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 2, 50, 150, 5400), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(4, "PuBuGn"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapworldHC
pstaticmapworldHC <- qtm(worldmap, fill = "pcountrycountHC", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Hillary's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
#fill.style = "fixed", # allows us to customize legend breaks
#fill.breaks = c(0, 2, 50, 150, 5400), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(4, "PuBuGn"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapworldHC
pstaticmapworldHC <- qtm(worldmap, fill = "pcountrycountHC", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Hillary's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 2, 50, 150, 5400), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(4, "PuBuGn"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
worldmap$pcountrycountTC
summary(worldmap$pcountrycountTC)
pstaticmapworldTC <- qtm(worldmap, fill = "pcountrycountTC", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Ted's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 5, 50, 100, 4900), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(4, "Greens"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapworldTC
worldmap$pcountrycountMR
summary(worldmap$pcountrycountMR)
pstaticmapworldHC <- qtm(worldmap, fill = "pcountrycountHC", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Hillary's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 2, 50, 150, 5400), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "PuBuGn"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapworldTC <- qtm(worldmap, fill = "pcountrycountTC", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Ted's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 5, 50, 100, 4900), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Greens"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapworldMR <- qtm(worldmap, fill = "pcountrycountMR", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Marco's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 5, 15, 40, 2700), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Oranges"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapworldMR <- qtm(worldmap, fill = "pcountrycountMR", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Marco's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 5, 15, 40, 2700), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Oranges"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapworldMR
worldmap$pcountrycountBS
summary(worldmap$pcountrycountBS)
pstaticmapworldBS <- qtm(worldmap, fill = "pcountrycountBS", # use worldmap that we created and fill with candidate's tweet counts by country
fill.title = "Bernie's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 5, 20, 100, 5600), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Blues"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapworldBS
worldmap$pcountrycountDT
summary(worldmap$pcountrycountDT)
pstaticmapworldDT <- qtm(worldmap, fill = "pcountrycountDT", # use worldmap that we created and fill with DT's tweet counts by country
fill.title = "Trump's Tweet Count", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 5, 20, 50, 100, 500, 10600), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(7, "Purples"), # use RColorBrewer scheme to color countries by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapworldDT
usa$pstatepropHC
summary(usa$pstatepropHC)
pstaticmapusaHC <- qtm(usa, fill = "pstatepropHC", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Hillary", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 2, 4, 10, 12), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "PuBuGn"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapusaHC
usa$pstatepropTC
summary(usa$pstatepropTC)
usa$pstatecountTC
pstaticmapusaTC <- qtm(usa, fill = "pstatepropTC", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Ted", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 2, 4, 6, 8, 13), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Greens"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapusaTC
usa$pstatepropMR
summary(usa$pstatepropMR)
pstaticmapusaMR <- qtm(usa, fill = "pstatepropMR", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Marco", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 2, 4, 8, 10, 11), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Oranges"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapusaMR
usa$pstatepropBS
summary(usa$pstatepropBS)
pstaticmapusaBS <- qtm(usa, fill = "pstatepropBS", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Bernie", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 2, 4, 8, 10, 14), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Blues"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapusaBS
pstaticmapusaBS <- qtm(usa, fill = "pstatepropBS", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Bernie", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 1, 2, 4, 8, 10, 14), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(6, "Blues"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapusaBS
pstaticmapusaBS <- qtm(usa, fill = "pstatepropBS", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Bernie", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 2, 4, 8, 10, 14), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Blues"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapusaBS
usa$pstatepropDT
summary(usa$pstatepropDT)
pstaticmapusaDT <- qtm(usa, fill = "pstatepropDT", # use use that we created and fill with candidate's tweet counts by state
fill.title = "Percent of Tweets about Donald", # legend title
borders.alpha = 0.5, # changes thickness of borders around countries
fill.style = "fixed", # allows us to customize legend breaks
fill.breaks = c(0, 2, 4, 6, 10, 11), # specify legend breaks
fill.auto.palette.mapping = FALSE, # allows up to change colors of map
fill.palette = brewer.pal(5, "Purples"), # use RColorBrewer scheme to color states by tweet count
style = "white", # use white style
layout.asp = NA)
pstaticmapusaDT
save_tmap(pstaticmapworldHC, filename="./jpeg-maps/pstaticmap.world.HC.jpg")
save_tmap(pstaticmapworldTC, filename="./jpeg-maps/pstaticmap.world.TC.jpg")
save_tmap(pstaticmapworldMR, filename="./jpeg-maps/pstaticmap.world.MR.jpg")
save_tmap(pstaticmapworldBS, filename="./jpeg-maps/pstaticmap.world.BS.jpg")
save_tmap(pstaticmapworldDT, filename="./jpeg-maps/pstaticmap.world.DT.jpg")
save_tmap(pstaticmapusaHC, filename="./jpeg-maps/pstaticmap.usa.HC.jpg")
save_tmap(pstaticmapusaTC, filename="./jpeg-maps/pstaticmap.usa.TC.jpg")
save_tmap(pstaticmapusaMR, filename="./jpeg-maps/pstaticmap.usa.MR.jpg")
save_tmap(pstaticmapusaBS, filename="./jpeg-maps/pstaticmap.usa.BS.jpg")
save_tmap(pstaticmapusaDT, filename="./jpeg-maps/pstaticmap.usa.DT.jpg")
