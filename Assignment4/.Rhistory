+ polviews, r2)
summary(lm4)
lm4 = lm(bmotiv ~ bdiscr + age + age.sq + educ + income06 + acqmyrac + as.factor(race)
+ polviews + as.factor(racecen1), r2)
summary(lm4)
r2 <- d[, c("age", "educ", "income06", "racdif1", "racdif4", "acqmyrac", "race", "polviews")]
r2 <- na.omit(r2)
r2$age.sq = r2$age^2
r2$bdiscr = ifelse(r2$racdif1==1, 1, 0) ## differences btwn blacks and whites due to discrimination, 1 = yes, 0 = no ##
r2$bmotiv = ifelse(r2$racdif4==1, 1, 0) ## difference btwn blacks and whites bc blacks not motivated, 1 = yes, 0 = no ##
lm4 = lm(bmotiv ~ bdiscr + age + age.sq + educ + income06 + acqmyrac + as.factor(race)
+ polviews, r2)
summary(lm4)
r2$race.l[r2$race==1] <- "White"
r2$race.l[r2$race==2] <- "Black"
r2$race.l[r2$race==3] <- "Other"
lm4 = lm(bmotiv ~ bdiscr + age + age.sq + educ + income06 + acqmyrac + race.l
+ polviews, r2)
summary(lm4)
lm4 = lm(bmotiv ~ bdiscr + age + age.sq + educ + income06 + acqmyrac +
relevel(as.factor(race.l), ref=1) + polviews, r2)
summary(lm4)
lm4 = lm(bmotiv ~ bdiscr + age + age.sq + educ + income06 + acqmyrac +
relevel(as.factor(race.l), ref=2) + polviews, r2)
summary(lm4)
lm4 = lm(bmotiv ~ bdiscr + age + age.sq + educ + income06 + acqmyrac +
relevel(as.factor(race.l), ref=3) + polviews, r2)
summary(lm4)
r2$race.fact <- factor(r2$race, levels = c(1,2,3), labels = c("White", "Black", "Other"))
lm4 = lm(bmotiv ~ bdiscr + age + age.sq + educ + income06 + acqmyrac +
relevel(race.fact, ref=1) + polviews, r2)
summary(lm4)
shapiro.test(r2$age)
options(scipen=999)
shapiro.test(r2$age)
shapiro.test(r2$age.sq)
shapiro.test(r2$income06)
r2 <- d[, c("age", "educ", "realinc", "racdif1", "racdif4", "acqmyrac", "race", "polviews")]
r2 <- na.omit(r2)
shapiro.test(r2$realinc)
shapiro.test(r2$educ)
shapiro.test(r2$race)
shapiro.test(r2$polviews)
lm4 = lm(bmotiv ~ bdiscr + age + age.sq + educ + realinc + acqmyrac +
relevel(race.fact, ref=1) + polviews, r2)
summary(lm4)
r2$bmotiv = ifelse(r2$racdif4==1, 1, 0) ## difference btwn blacks and whites bc blacks not motivated, 1 = yes, 0 = no ##
lm4 = lm(bmotiv ~ bdiscr + age + age.sq + educ + realinc + acqmyrac +
relevel(race.fact, ref=1) + polviews, r2)
r2$age.sq = r2$age^2
r2$bdiscr = ifelse(r2$racdif1==1, 1, 0) ## differences btwn blacks and whites due to discrimination, 1 = yes, 0 = no ##
r2$bmotiv = ifelse(r2$racdif4==1, 1, 0) ## difference btwn blacks and whites bc blacks not motivated, 1 = yes, 0 = no ##
r2$race.l[r2$race==1] <- "White"
r2$race.l[r2$race==2] <- "Black"
r2$race.l[r2$race==3] <- "Other"
r2$race.fact <- factor(r2$race, levels = c(1,2,3), labels = c("White", "Black", "Other"))
lm4 = lm(bmotiv ~ bdiscr + age + age.sq + educ + realinc + acqmyrac +
relevel(race.fact, ref=1) + polviews, r2)
summary(lm4)
r2$yhat <- lm4$fitted # or equivalently sub$yhat <- predict(lpm.romance)
r2$resids <- lm4$residuals
with(r2, plot(jitter(bdiscr), jitter(bmotiv), col = "mediumorchid1", cex = 0.75,
xlab="Inequality Due to Discrimination",
ylab="Inequality Due to Lack of Motivation"))
abline(lm(yhat ~ bdiscr, data = r2), lwd = 2, col = "seagreen3")
with(r2, plot(age.sq, jitter(bmotiv), col = "turquoise3", cex = 0.75,
xlab="Age Squared",
ylab="Inequality Due to Lack of Motivation"))
abline(lm(yhat ~ age.sq, data = r2), lwd = 2, col = "seagreen3")
with(r2, plot(jitter(age.sq), jitter(bmotiv), col = "turquoise3", cex = 0.75,
xlab="Age Squared",
ylab="Inequality Due to Lack of Motivation"))
abline(lm(yhat ~ age.sq, data = r2), lwd = 2, col = "seagreen3")
regLine(lm4, lwd=2, lty=1)
with(r2, plot(jitter(realinc), jitter(bmotiv), col = "redorange", cex = 0.75,
xlab="Income",
ylab="Inequality Due to Lack of Motivation"))
with(r2, plot(jitter(realinc), jitter(bmotiv), col = "orangered", cex = 0.75,
xlab="Income",
ylab="Inequality Due to Lack of Motivation"))
abline(lm(yhat ~ realinc, data = r2), lwd = 2, col = "seagreen3")
with(r2, plot(jitter(polviews), jitter(bmotiv), col = "black", cex = 0.75,
xlab="Political Views",
ylab="Inequality Due to Lack of Motivation"))
abline(lm(yhat ~ polviews, data = r2), lwd = 2, col = "seagreen3")
truehist(r2$resids, col = "gold", yaxt = "n", cex.axis = 0.8, xlab = "Residuals")
curve(dnorm(x, mean = mean(r2$resids), sd = sd(r2$resids)),
lwd = 4, col = "orangered", add=T)
range(r2$yhat)
library(lmtest)
bptest(lm4)
logit1 = glm(bmotiv ~ bdiscr + age + age.sq + educ + realinc + acqmyrac +
relevel(race.fact, ref=1) + polviews, r2, family=binomial)
summary(logit1)
stargazer(lm4, logit1, title="Regression Results", align=TRUE,
dep.var.labels=c("Ineq Due to Lack of Motivation"),
covariate.labels=c("Ineq Due to Discrimination", "Age", "Age Squared",
"Education", "Income", "Race of Acquaintances",
"Race - Black", "Race - Other", "Political Views"),
no.space=TRUE, column.labels=c("Multiple Reg", "Logit"),
dep.var.caption="", model.numbers=FALSE, type = "text", omit = "Constant")
library(stargazer)
stargazer(lm4, logit1, title="Regression Results", align=TRUE,
dep.var.labels=c("Ineq Due to Lack of Motivation"),
covariate.labels=c("Ineq Due to Discrimination", "Age", "Age Squared",
"Education", "Income", "Race of Acquaintances",
"Race - Black", "Race - Other", "Political Views"),
no.space=TRUE, column.labels=c("Multiple Reg", "Logit"),
dep.var.caption="", model.numbers=FALSE, type = "text", omit = "Constant")
exp(coef(logit1))
summary(r2$age)
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,1), age = c(46,46), polviews = c(4,4), educ = c(12,16),
race.fact = c(1,1)))
summary(r2$age.sq)
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,1), age = c(46,46), age.sq(2116,2116), polviews = c(4,4),
educ = c(12,16), race.fact = c(1,1)))
r2$age.sq = r2$age^2
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,1), age = c(46,46), age.sq(2116,2116), polviews = c(4,4),
educ = c(12,16), race.fact = c(1,1)))
r2 <- d[, c("age", "educ", "realinc", "racdif1", "racdif4", "acqmyrac", "race", "polviews")]
r2 <- na.omit(r2)
options(scipen=999)
r2$age.sq = r2$age^2
r2$bdiscr = ifelse(r2$racdif1==1, 1, 0) ## differences btwn blacks and whites due to discrimination, 1 = yes, 0 = no ##
r2$bmotiv = ifelse(r2$racdif4==1, 1, 0) ## difference btwn blacks and whites bc blacks not motivated, 1 = yes, 0 = no ##
r2$race.l[r2$race==1] <- "White"
r2$race.l[r2$race==2] <- "Black"
r2$race.l[r2$race==3] <- "Other"
r2$race.fact <- factor(r2$race, levels = c(1,2,3), labels = c("White", "Black", "Other"))
r2$yhat <- lm4$fitted # or equivalently sub$yhat <- predict(lpm.romance)
r2$resids <- lm4$residuals
truehist(r2$resids, col = "gold", yaxt = "n", cex.axis = 0.8, xlab = "Residuals")
curve(dnorm(x, mean = mean(r2$resids), sd = sd(r2$resids)),
lwd = 4, col = "orangered", add=T)
range(r2$yhat)
logit1 = glm(bmotiv ~ bdiscr + age + age.sq + educ + realinc + acqmyrac +
relevel(race.fact, ref=1) + polviews, r2, family=binomial)
summary(logit1)
exp(coef(logit1))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,1), age = c(46,46), polviews = c(4,4), educ = c(12,16),
race.fact = c(1,1)))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,0), age = c(46,46), polviews = c(4,4), educ = c(16,16),
race.fact = c(1,2)))
exists(age.sq)
exists(r2$age.sq)
exists(age.sq)
exists(realinc)
exists(age)
summary(r2$realinc)
summary(r2$acqmyrac)
summary(r2$polviews)
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,1), age = c(46,46), age.sq = c(2116, 2116), polviews = c(4,4),
educ = c(12,16), realinc = c(25000,25000) , acqmyrac = c(2,2),
race.fact = c(1,1), polviews = (4,4)))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0, 1), age = c(46, 46), age.sq = c(2116, 2116), polviews = c(4, 4),
educ = c(12, 16), realinc = c(25000, 25000), acqmyrac = c(2, 2),
race.fact = c(1, 1), polviews = (4, 4)))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0, 1), age = c(46, 46), age.sq = c(2116, 2116), polviews = c(4, 4),
educ = c(12, 16), realinc = c(25000, 25000), acqmyrac = c(2, 2),
race.fact = c(1, 1), polviews = (4, 4))))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0, 1), age = c(46, 46), age.sq = c(2116, 2116), polviews = c(4, 4),
educ = c(12, 16), realinc = c(25000, 25000), acqmyrac = c(2, 2),
race.fact = c(1, 1), polviews = (4, 4))))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0, 1), age = c(46, 46), age.sq = c(2116, 2116),
educ = c(12, 16), realinc = c(25000, 25000), acqmyrac = c(2, 2),
race.fact = c(1, 1), polviews = c(4, 4))))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0, 1), age = c(46, 46), age.sq = c(2116, 2116),
educ = c(12, 16), realinc = c(25000, 25000), acqmyrac = c(2, 2),
race.fact = c(1, 1), polviews = c(4, 4)))
class(race.fact)
class(r2$race.fact)
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,0), age = c(46,46), age.sq = c(2116, 2116),
educ = c(16,16), realinc = c(25000,25000), acqmyrac = c(2,2),
race.fact = c(1,2), polviews = (4, 4)))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0,0), age = c(46,46), age.sq = c(2116, 2116),
educ = c(16,16), realinc = c(25000,25000), acqmyrac = c(2,2),
race.fact = c(1,2), polviews = c(4, 4)))
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(1,1), age = c(46,46), age.sq = c(2116, 2116),
educ = c(16,16), realinc = c(25000,25000), acqmyrac = c(2,2),
race.fact = c(2,2), polviews = c(4, 4)))
logit1 = glm(bmotiv ~ bdiscr + age + age.sq + educ + realinc + acqmyrac +
relevel(race.fact, ref=1) + polviews, r2, family=binomial)
predict(logit1, type = "response", newdata = data.frame(bdiscr = c(0, 1), age = c(46, 46), age.sq = c(2116, 2116),
educ = c(12, 16), realinc = c(25000, 25000), acqmyrac = c(2, 2),
race.fact = c(1, 1), polviews = c(4, 4)))
library(stargazer)
stargazer(lm4, logit1, title="Regression Results", align=TRUE,
dep.var.labels=c("Ineq Due to Lack of Motivation"),
covariate.labels=c("Ineq Due to Discrimination", "Age", "Age Squared",
"Education", "Income", "Race of Acquaintances",
"Race - Black", "Race - Other", "Political Views"),
no.space=TRUE, column.labels=c("Multiple Reg", "Logit"),
dep.var.caption="", model.numbers=FALSE, type = "text", omit = "Constant")
lm5 = lm(bmotiv ~ bdiscr + age + age.sq + educ + realinc + acqmyrac + polviews, r2)
summary(lm5)
r2$yhat <- lm5$fitted # or equivalently sub$yhat <- predict(lpm.romance)
r2$resids <- lm5$residuals
truehist(r2$resids, col = "gold", yaxt = "n", cex.axis = 0.8, xlab = "Residuals")
curve(dnorm(x, mean = mean(r2$resids), sd = sd(r2$resids)),
lwd = 4, col = "orangered", add=T)
logit2 = glm(bmotiv ~ bdiscr + age + age.sq + educ + realinc + acqmyrac + polviews, r2, family=binomial)
summary(logit2)
predict(logit2, type = "response", newdata = data.frame(bdiscr = c(0, 1), age = c(46, 46), age.sq = c(2116, 2116),
educ = c(12, 16), realinc = c(25000, 25000), acqmyrac = c(2, 2),
polviews = c(4, 4)))
predict(logit2, type = "response", newdata = data.frame(bdiscr = c(0,0), age = c(46,46), age.sq = c(2116, 2116),
educ = c(16,16), realinc = c(25000,25000), acqmyrac = c(2,2),
polviews = c(4, 4)))
predict(logit2, type = "response", newdata = data.frame(bdiscr = c(1,1), age = c(46,46), age.sq = c(2116, 2116),
educ = c(16,16), realinc = c(25000,25000), acqmyrac = c(2,2),
polviews = c(4, 4)))
pred.dat <- with(r2, expand.grid(
bdiscr = sort(unique(bdiscr)),
age = mean(age),
age.sq = mean(age.sq),
educ = mean(educ),
realinc = mean(realinc),
acqmyrac = sort(unique(acqmyrac)),
polviews = mean(polviews)))
predProb(logit2, predData = pred.dat, ci = F)
pred.dat <- with(r2, expand.grid(
bdiscr = sort(unique(bdiscr)),
age = mean(age),
age.sq = mean(age.sq),
educ = mean(educ),
realinc = mean(realinc),
acqmyrac = sort(unique(acqmyrac)),
polviews = sort(unique(polviews)))
pred.dat <- with(r2, expand.grid(
bdiscr = sort(unique(bdiscr)),
age = mean(age),
age.sq = mean(age.sq),
educ = mean(educ),
realinc = mean(realinc),
acqmyrac = sort(unique(acqmyrac)),
polviews = sort(unique(polviews))))
pred.dat <- with(r2, expand.grid(
bdiscr = sort(unique(bdiscr)),
age = mean(age),
age.sq = mean(age.sq),
educ = mean(educ),
realinc = mean(realinc),
acqmyrac = sort(unique(acqmyrac)),
polviews = sort(unique(polviews))))
predProb(logit2, predData = pred.dat, ci = F)
library(visreg)
plot(logit2)
library(visreg)
visreg(logit2, xvar="bdiscr", by="bmotiv", overlay=T, partial=F, legend=F,
xlab="Ineq. Due to Discrimination", ylab="Ineq. Due to Lack of Motivation",
scale="response", line = list(col = c("cyan3", "purple3", "red", "blue", "gray55")))
visreg(logit2, xvar="bdiscr", by="bmotiv", overlay=T, partial=F, legend=F,
xlab="Ineq. Due to Discrimination", ylab="Ineq. Due to Lack of Motivation",
scale="response", type = "conditional",
line = list(col = c("cyan3", "purple3", "red", "blue", "gray55")))
visreg(logit2, xvar="bdiscr", by="bmotiv", overlay=T, partial=F, legend=F,
xlab="Ineq. Due to Discrimination", ylab="Ineq. Due to Lack of Motivation",
scale="response", type = "conditional", alpha = .90,
line = list(col = c("cyan3", "purple3", "red", "blue", "gray55")))
visreg(logit2, xvar="bdiscr", by="bmotiv", overlay=T, partial=F, legend=F,
xlab="Ineq. Due to Discrimination", ylab="Ineq. Due to Lack of Motivation",
scale="response", type = "conditional", alpha = .90,
line = list(col = c("cyan3", "purple3")))
visreg(logit2, xvar="bdiscr", by="bmotiv", overlay=T, partial=F, legend=F,
xlab="Ineq. Due to Discrimination", ylab="Ineq. Due to Lack of Motivation",
scale="response", type = "conditional", alpha = .90,
line = list(col = c("cyan3", "purple3", "gray55")))
legend("bottomleft", lwd = 2, c("1", "2", "3", "4", "5"), col = c("cyan3", "purple3", "red", "blue", "gray55"), cex = 0.8)
library(plm)
library(QMSS)
d=read.csv(file.choose()) ## choose "panel-for-R.csv" and more information on variables are here: http://sda.berkeley.edu/sdaweb/analysis/?dataset=gss06panelw3 ##
vars <- c("idnum","panelwave","affrmact","race", "intrace1")
pd.sub <- d[, vars]
pd.sub$black = ifelse(pd.sub$race==2, 1, 0)
pd.sub$intblack = ifelse(pd.sub$intrace1==2, 1, 0)
pd.sub$r.affact = 5-pd.sub$affrmact
pd.sub$year= ifelse(pd.sub$panelwave==3, 1, 0)
lm1 <- lm(r.affact ~ black + intblack + as.factor(panelwave),  data = pd.sub)
summary(lm1)
clusterSE(fit = lm1, cluster.var = "idnum", data=pd.sub)
plm1 <- plm(r.affact ~ black + intblack + year,  index = c("idnum", "panelwave"),  model = "fd", data = pd.sub)
summary(plm1)
clusterSE(fit = plm1, cluster.var = "idnum", data=pd.sub)
pd.sub$fourvsall= ifelse(pd.sub$r.affact==4, 1, 0)
pd.sub$fourthreevsall= ifelse(pd.sub$r.affact>=3, 1, 0)
pd.sub$fourthreetwovsone= ifelse(pd.sub$r.affact>=2, 1, 0)
plm2 <- plm(fourvsall ~ black + intblack + year,  index = c("idnum", "panelwave"),  model = "fd", data = pd.sub)
plm3 <- plm(fourthreevsall ~ black + intblack + year,  index = c("idnum", "panelwave"),  model = "fd", data = pd.sub)
plm4 <- plm(fourthreetwovsone ~ black + intblack + year,  index = c("idnum", "panelwave"),  model = "fd", data = pd.sub)
summary(plm4)
library(stargazer)
stargazer(plm1, plm2, plm3, plm4, type = "text")
pd.sub$d.intblack = firstD(intblack, idnum, pd.sub )
table(pd.sub$d.intblack)
pd.sub$bw=ifelse(pd.sub$d.intblack==-1,1,0)
pd.sub$wb=ifelse(pd.sub$d.intblack==1,1,0)
pd.sub$d.r.affact=firstD(r.affact, idnum, pd.sub )
summary(lm(intblack ~ black, pd.sub))
pd.sub$d.black = firstD(black, idnum, pd.sub )
table(pd.sub$d.black)
summary(lm(d.r.affact ~ bw, pd.sub, subset=black==0))
vars2 = c("colsci", "colscinm", "advfront", "scibnfts", "natsci", "educ", "relig", "fund", "idnum", "panelwave", "id", "year")
v = pan[,vars2]
table(v$panelwave, v$advfront)
prop.table(table(v$panelwave, v$advfront))
table(v$panelwave, v$natsci)
prop.table(table(v$panelwave, v$natsci))
library(plyr)
library(devtools)
library(QMSS)
v$scinec = 5-v$advfront
lm2 <- lm(natsci ~ scinec + as.factor(panelwave), v)
summary(lm2)
sci.pool2 <- plm(natsci ~ scinec + as.factor(panelwave), index = c("idnum", "panelwave"), model = "pooling", data = v)
summary(sci.pool2)
clusterSE(fit = lm2, cluster.var = "idnum", data = v)
pan=read.csv(file.choose()) ## choose panel-for-R.csv
vars2 = c("colsci", "colscinm", "advfront", "scibnfts", "natsci", "educ", "relig", "fund", "idnum", "panelwave", "id", "year")
v = pan[,vars2]
table(v$panelwave, v$advfront)
prop.table(table(v$panelwave, v$advfront))
library(plyr)
library(devtools)
library(QMSS)
v$scinec = 5-v$advfront
lm2 <- lm(natsci ~ scinec + as.factor(panelwave), v)
summary(lm2)
clusterSE(fit = lm2, cluster.var = "idnum", data = v)
v <- ddply(v, "idnum", mutate, d.scinec = firstD(scinec), d.natsci = firstD(natsci))
table(v$d.scinec)
prop.table(table(v$d.scinec))
table(v$d.natsci)
prop.table(table(v$d.natsci))
plm2 <- plm(natsci ~ scinec + as.factor(panelwave), index = c("idnum", "panelwave"), model = "fd", data = v)
summary(plm2)
clusterSE(fit = plm2, cluster.var = "idnum", data=v)
v$bsci = 4-v$scibnfts
v <- ddply(v, "idnum", mutate, d.bsci = firstD(bsci))
table(v$d.bsci)
prop.table(table(v$d.bsci))
plm3 <- plm(natsci ~ scinec + as.factor(panelwave) + as.factor(bsci), index = c("idnum", "panelwave"), model = "fd", data = v)
summary(plm3)
library(stargazer)
stargazer(lm2, plm2, plm3, title="Regression Results", align=TRUE, dep.var.labels=c("Federal Spending on Scientific Research"), covariate.labels=c("Pro Sci","2008","2010","Ben=Harm","Ben>Harm"), no.space=TRUE, column.labels=c("OLS", "First Diff A", "First Diff B"), dep.var.caption="", model.numbers=FALSE, type = "text", omit = "Constant")
install.packages("streamR")
library(streamR)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "gYIxV6TdEf9glxYWlGSGdBAiF"
consumerSecret <- "QIRynpLw0P6elikgsRyQeM7SzencY0Q1oGDwfb4zvzWpGBUe1K"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey, consumerSecret = consumerSecret,
requestURL = requestURL, accessURL = accessURL, authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
library(RCurl)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "gYIxV6TdEf9glxYWlGSGdBAiF"
consumerSecret <- "QIRynpLw0P6elikgsRyQeM7SzencY0Q1oGDwfb4zvzWpGBUe1K"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey, consumerSecret = consumerSecret,
requestURL = requestURL, accessURL = accessURL, authURL = authURL)
load("my_oauth")
library(ROAuth)
install.packages("ROAuth")
library(ROAuth)
library(RCurl)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "gYIxV6TdEf9glxYWlGSGdBAiF"
consumerSecret <- "QIRynpLw0P6elikgsRyQeM7SzencY0Q1oGDwfb4zvzWpGBUe1K"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey, consumerSecret = consumerSecret,
requestURL = requestURL, accessURL = accessURL, authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
save(my_oauth, file = "my_oauth.Rdata")
load("my_oauth.Rdata")
library(streamR)
filterStream("tweets.json", track = c("women", "men", timeout = 10, oauth = my_oauth))
filterStream("tweets.json", track = c("women", "men"), timeout = 10, oauth = my_oauth)
tweets.df <- parseTweets("tweets.json", simplify = TRUE)
c( length(grep("women", tweets.df$text, ignore.case = TRUE)),
length(grep("men", tweets.df$text, ignore.case = TRUE)) )
View(tweets.df)
table(tweets.df)
View(tweets.df)
list(tweets.df)
filterStream("tweetsUS.json", locations = c(-125, 25, -66, 50), timeout = 10,
oauth = my_oauth)
tweets.df <- parseTweets("tweetsUS.json", verbose = FALSE)
library(ggplot2)
library(grid)
map.data <- map_data("state")
install.packages("maps")
library(maps)
map.data <- map_data("state")
points <- data.frame(x = as.numeric(tweets.df$lon), y = as.numeric(tweets.df$lat))
points <- points[points$y > 25, ]
ggplot(map.data) + geom_map(aes(map_id = region), map = map.data, fill = "white",
color = "grey20", size = 0.25) + expand_limits(x = map.data$long, y = map.data$lat) +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(),
axis.title = element_blank(), panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(), plot.background = element_blank(),
plot.margin = unit(0 * c(-1.5, -1.5, -1.5, -1.5), "lines")) + geom_point(data = points,
aes(x = x, y = y), size = 1, alpha = 1/5, color = "darkblue")
table(gss$race)
prop.table(table(gss$race))
find.package("devtools")
library(devtools)
find_rtools()
find.package("KernSmooth")
library(KernSmooth)
shiny::runApp('GitHub/DataViz/Assignment4/shinyapp')
file16 <- "<a href='https://primary-tweets-summaries-csv.s3.amazonaws.com/tweets.03.16.2016.summary.csv?AWSAccessKeyId=AKIAJUOIB5T3ZG6K7TBQ&Expires=1460320147&Signature=tN%2FvRPjQITHUNu6wC22ymlJDwyc%3D'</a>"
raw16 <- read.csv(file16, header=T, skip=1)
file16 <- "<a> href='https://primary-tweets-summaries-csv.s3.amazonaws.com/tweets.03.16.2016.summary.csv?AWSAccessKeyId=AKIAJUOIB5T3ZG6K7TBQ&Expires=1460320147&Signature=tN%2FvRPjQITHUNu6wC22ymlJDwyc%3D'</a>"
raw16 <- read.csv(file16, header=T, skip=1)
file16 <- read.csv(url("https://primary-tweets-summaries-csv.s3.amazonaws.com/tweets.03.16.2016.summary.csv?AWSAccessKeyId=AKIAJUOIB5T3ZG6K7TBQ&Expires=1460320147&Signature=tN%2FvRPjQITHUNu6wC22ymlJDwyc%3D"), header = TRUE)
file17 <- read.csv(url("https://primary-tweets-summaries-csv.s3.amazonaws.com/tweets.03.17.2016.summary.csv?AWSAccessKeyId=AKIAJUOIB5T3ZG6K7TBQ&Expires=1460320147&Signature=uBVexgjkjid1Q3NhITR87CyBQOY%3D"), header = TRUE)
mar16 <- read.csv("./data/tweets.03.16.2016.summary.csv", header = TRUE)
setwd("~/GitHub/DataViz/Assignment4")
mar16 <- read.csv("./data/tweets.03.16.2016.summary.csv", header = TRUE)
mar17 <- read.csv("./data/tweets.03.17.2016.summary.csv", header = TRUE)
t <- read.csv("./data/pared-tweets.csv", header = TRUE)
t$text <- sapply(t$text, function(row) iconv(row, "latin1", "ASCII", sub = ""))
t$date <- as.Date(t$created_at, format="%a %b %d %H:%M:%S")
t$economy <- ifelse(grepl("economy|business|finance|income|tax", t$text, ignore.case = TRUE), 1, 0)
t$immigration <- ifelse(grepl("immigration|bordercontrol|illegalalien[s]|buildawall|refugee", t$text, ignore.case = TRUE), 1, 0)
t$healthcare <- ifelse(grepl("healthcare|medical|medicare|obamacare|healthinsurance", t$text, ignore.case = TRUE), 1, 0)
t <- t[, c(1:7)]
t$economy <- ifelse(grepl("econom|business|financ|income|tax", t$text, ignore.case = TRUE), 1, 0)
t$immigration <- ifelse(grepl("immigration|bordercontrol|illegalalien|buildawall|refugee", t$text, ignore.case = TRUE), 1, 0)
t$healthcare <- ifelse(grepl("healthcare|medical|medicare|obamacare|healthinsurance", t$text, ignore.case = TRUE), 1, 0)
t$military <- ifelse(grepl("military|war|soldier|army|terrorist", t$text, ignore.case = TRUE), 1, 0)
t$guncontrol <- ifelse(grepl("gun|weapon|secondamendment|beararms|firearm", t$text, ignore.case = TRUE), 1, 0)
t$china <- ifelse(grepl("china|chinese|xijinping|mandarin|madeinamerica", t$text, ignore.case = TRUE), 1, 0)
t$trade <- ifelse(grepl("trade|globalization|freemarket|transpacificpartnership|international", t$text, ignore.case = TRUE), 1, 0)
t$race <- ifelse(grepl("racism|blacklivesmatter|massincarceration|racial|whiteprivilege", t$text, ignore.case = TRUE), 1, 0)
t$climatechange <- ifelse(grepl("globalwarming|climatechange|greenhousegas|cleanenergy|pollution", t$text, ignore.case = TRUE), 1, 0)
t$religion <- ifelse(grepl("religio|christ|atheis|muslim|islam", t$text, ignore.case = TRUE), 1, 0)
t$topic[t$economy==1] <- "economy"
t$topic[t$military==1] <- "military"
t$topic[t$guncontrol==1] <- "guncontrol"
t$topic[t$race==1] <- "race"
t$topic[t$religion==1] <- "religion"
t$topic[t$trade==1] <- "trade"
t$topic[t$china==1] <- "china"
t$topic[t$climatechange==1] <- "climatechange"
t$topic[t$immigration==1] <- "immigration"
t$topic[t$healthcare==1] <- "healthcare"
t$topicsum <- rowSums(t[8:17])
t$topic[t$topicsum>1] <- "multiple"
t2 <- t[!is.na(t$topic),]
View(t2)
tweets.df <- t2
tweets.df <- tweets.df[!tweets.df$date=="2016-03-26",]
candidates <- c("Hillary Clinton","Ted Cruz","Bernie Sanders","Donald Trump","Democrats","Republicans")
candidates_new <- list(c("hillary|clinton|imwithher|hillyes|giveemhill|sheswithus|hrc","Hillary Clinton"),
c("ted|cruz","Ted Cruz"),
c("bernie|sanders|feelthebern","Bernie Sanders"),
c("donald|trump|drumpf|makeamericagreatagain","Donald Trump")
)
output_2 <- character(nrow(tweets.df))
for(i in seq_along(candidates_new)){
output_2[grepl(x = tweets.df$text, ignore.case = TRUE,
pattern = candidates_new[[i]][1])] <- candidates_new[[i]][2]
}
tweets.df$candidate <- output_2
tweets.df$party2[tweets.df$candidate=="Hillary Clinton"] <- "Democrats"
tweets.df$party2[tweets.df$candidate=="Bernie Sanders"] <- "Democrats"
tweets.df$party2[tweets.df$candidate=="Ted Cruz"] <- "Republicans"
tweets.df$party2[tweets.df$candidate=="Donald Trump"] <- "Republicans"
hc.df <- subset(tweets.df, subset = grepl("hillary|clinton|imwithher|hillyes|giveemhill|sheswithus|hrc", text, ignore.case=TRUE))
tc.df <- subset(tweets.df, subset = grepl("ted|cruz", text, ignore.case=TRUE))
bs.df <- subset(tweets.df, subset = grepl("bernie|sanders|feelthebern", text, ignore.case=TRUE))
dt.df <- subset(tweets.df, subset = grepl("donald|trump|drumpf|makeamericagreatagain", text, ignore.case=TRUE))
dems.df <- rbind(hc.df,bs.df)
reps.df <- rbind(tc.df,dt.df)
dems.df <- dems.df[!is.na(dems.df$party2),]
dems.df <- dems.df[dems.df$party2=="Democrats",]
reps.df <- reps.df[!is.na(reps.df$party2),]
reps.df <- reps.df[reps.df$party2=="Republicans",]
write.csv(t2, file = "./shinyapp/t2.csv")
shiny::runApp('shinyapp')
tweets.df <- tweets.df[!tweets.df$date=="2016-03-26",]
candidates <- c("Hillary Clinton","Ted Cruz","Bernie Sanders","Donald Trump","Democrats","Republicans")
candidates_new <- list(c("hillary|clinton|imwithher|hillyes|giveemhill|sheswithus|hrc","Hillary Clinton"),
c("ted|cruz","Ted Cruz"),
c("bernie|sanders|feelthebern","Bernie Sanders"),
c("donald|trump|drumpf|makeamericagreatagain","Donald Trump")
)
output_2 <- character(nrow(tweets.df))
for(i in seq_along(candidates_new)){
output_2[grepl(x = tweets.df$text, ignore.case = TRUE,
pattern = candidates_new[[i]][1])] <- candidates_new[[i]][2]
}
tweets.df$candidate <- output_2
tweets.df$party2[tweets.df$candidate=="Hillary Clinton"] <- "Democrats"
tweets.df$party2[tweets.df$candidate=="Bernie Sanders"] <- "Democrats"
tweets.df$party2[tweets.df$candidate=="Ted Cruz"] <- "Republicans"
tweets.df$party2[tweets.df$candidate=="Donald Trump"] <- "Republicans"
hc.df <- subset(tweets.df, subset = grepl("hillary|clinton|imwithher|hillyes|giveemhill|sheswithus|hrc", text, ignore.case=TRUE))
tc.df <- subset(tweets.df, subset = grepl("ted|cruz", text, ignore.case=TRUE))
bs.df <- subset(tweets.df, subset = grepl("bernie|sanders|feelthebern", text, ignore.case=TRUE))
dt.df <- subset(tweets.df, subset = grepl("donald|trump|drumpf|makeamericagreatagain", text, ignore.case=TRUE))
dems.df <- rbind(hc.df,bs.df)
reps.df <- rbind(tc.df,dt.df)
shiny::runApp('shinyapp')
install.packages("rdrop2")
library(rdrop2)
response <- GET(url = "https://www.dropbox.com/s/yts35d8j0qalf1x/t2.csv?dl=0")
response <- get(url = "https://www.dropbox.com/s/yts35d8j0qalf1x/t2.csv?dl=0")
